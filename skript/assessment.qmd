# Lernzielkontrolle

Herzlich willkommen zur Lernzielkontrolle!

Diese Selbstlernkontrolle dient dazu, Ihr Verständnis der bisher behandelten 
Themen zu überprüfen und Ihnen die Möglichkeit zu geben, Ihren Lernfortschritt 
eigenständig zu bewerten. Sie ist so konzipiert, dass Sie Ihre Stärken und 
Schwächen erkennen und gezielt an den Bereichen arbeiten können, die noch 
verbessert werden müssen.

Bitte nehmen Sie sich ausreichend Zeit für die Bearbeitung der Fragen und gehen 
Sie diese in Ruhe durch. Seien Sie ehrlich zu sich selbst und versuchen Sie, 
die Aufgaben ohne Hilfsmittel zu lösen, um ein realistisches Bild Ihres 
aktuellen Wissensstands zu erhalten. Sollten Sie bei einer Frage Schwierigkeiten 
haben, ist dies ein Hinweis darauf, dass Sie in diesem Bereich noch weiter üben 
sollten.

Viel Erfolg bei der Bearbeitung und beim weiteren Lernen!

## Aufgabe 1 {.unnumbered}

Wie wird das NumPy-Paket typischerweise eingebunden?

## Aufgabe 2 {.unnumbered}

Erstellen Sie mit Hilfe von NumPy die folgenden Arrays:

1. Erstellen sie aus der Liste [1, 2, 3] ein numPy Array
2. Ein eindimensionales Array, das die Zahlen von 0 bis 9 enthält.
3. Ein zweidimensionales Array der Form 3×33×3, das nur aus Einsen besteht.
4. Ein eindimensionales Array, das die Zahlen von 10 bis 50 (einschließlich) in 
Schritten von 5 enthält.

## Aufgabe 3 {.unnumbered}

Was ist der Unterschied zwischenden den Funktionen `np.ndim`, `np.shape` und 
`np.size`

## Aufgabe 4 {.unnumbered}

Frage zu Datentypen - Änderungen mit NumPy 2.0 abwarten

## Aufgabe 5 {.unnumbered}

Führen Sie mit den folgenden zwei Arrays diese mathematischen Operationen durch:

a = [5, 1, 3, 6, 4] und b = [6, 5, 2, 6, 9]

1. Addieren Sie beide Arrays
2. Berechnen Sie das elementweise Produkt von a und b
3. Addieren Sie zu jedem Eintrag von a 3 dazu

## Aufgabe 6 {.unnumbered}

a = [9, 2, 3, 1, 3]

1. Bestimmen Sie Mittelwert und Standardabweichung für das Array a
2. Bestimmen Sie Minimum und Maximum der Liste

## Aufgabe 7 {.unnumbered}

matrix = np.array([
    [ 1,  2,  3,  4,  5],
    [ 6,  7,  8,  9, 10],
    [11, 12, 13, 14, 15],
    [16, 17, 18, 19, 20],
    [21, 22, 23, 24, 25]
])

1. Extrahieren Sie die erste Zeile.
2. Extrahieren Sie die letzte Spalte.
3. Extrahieren Sie die Untermatrix, die aus den Zeilen 2 bis 4 und den 
Spalten 1 bis 3 besteht.

## Aufgabe 8 {.unnumbered}

array = np.arange(1, 21)

1. Ändern Sie die Form des Arrays in eine zweidimensionale Matrix der Form 4×54×5.
2. Ändern Sie die Form des Arrays in eine zweidimensionale Matrix der Form 5×45×4.
3. Ändern Sie die Form des Arrays in eine dreidimensionale Matrix der Form 2×2×52×2×5.
4. Flachen Sie das dreidimensionale Array aus Aufgabe 3 wieder zu einem 
eindimensionalen Array ab.
5. Transponieren Sie die 4×54×5-Matrix aus Aufgabe 1.

## Aufgabe 9 {.unnumbered}

Mit welchen zwei Funktionen können Daten aus einer Datei gelsen und in einer 
Datei gespeichert werden?

## Aufgabe 10 {.unnumbered}

Sie möchten aus einem Bild die Bilddaten einer Farkomponente isolieren. Was 
müssen Sie dafür tun?

::: {.callout-caution icon="false" collapse="true"}


## Lösung

### Aufgabe 1 {.unnumbered}

```{python}
import numpy as np
```

### Aufgabe 2 {.unnumbered}
```{python}
# 1.
np.array([1, 2, 3])

# 2. 
print(np.arange(10))

# 3. 
print(np.ones((3, 3)))

# 4. 
print(np.arange(10, 51, 5))
```

### Aufgabe 3 {.unnumbered}

`np.ndim`: Gibt die Anzahl der Dimensionen zurück
`np.shape`: Gibt die Längen der einzelnen Dimensionen wieder
`np.size`: Gibt die Anzahl aller Elemente aus

### Aufgabe 4 {.unnumbered}

???

### Aufgabe 5 {.unnumbered}


:::