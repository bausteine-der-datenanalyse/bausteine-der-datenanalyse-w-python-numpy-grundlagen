# Slicing

```{python}
#| echo: false
import numpy as np
```

![Ansprechen der einzelnen Achsen für den ein-, zwei- und dreidimensionallen Fall inkl. jeweiligem Beispiel](/skript/00-bilder/slicing.png){#fig-slicing fig-alt="AUswahl der jeweiligen Achsen für NumPy Arrays von verschiedener Dimension, dargestellt durch gestapelte Blöcke"}

Möchte man jetzt Daten innerhalb eines Arrays auswählen so geschieht das in der 
Form:

```{python}
liste = np.array([1, 2, 3, 4, 5, 6])
```

```{python}
# Auswählen des ersten Elements
liste[0]
```

```{python}
# Auswählen des letzen Elements
liste[-1]
```

```{python}
# Auswählen einer Reihe von Elementen
liste[1:4]
```

Für zwei-dimensionale Arrays wählt man getrennt durch ein Komma mit einer 
zweiten Zahl die zweite Dimension aus.

```{python}
matrix = np.array([[1, 2, 3], [4, 5, 6]])
```

```{python}
# Auswählen einer Elements
matrix[1,1]
```

Für drei-dimensionale Arrays wählt man getrennt durch ein Komma mit einer 
weiteren Zahl die dritte Dimension aus. Dabei wird dieses jedoch an die erste 
Stelle gesetzt. 

```{python}
matrix_3d = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])
print(matrix_3d)
```

```{python}
# Auswählen eines Elements
matrix_3d[1,0,2]
```

::: {.callout-tip collapse="true"}

## Zwischenübung: Array-Slicing

Wählen Sie die farblich markierten Bereiche aus dem Array "matrix" mit den eben 
gelernten Möglichkeiten des Array-Slicing aus.

![](/skript/00-bilder/exercise_slicing.svg)

::: {.callout-caution icon="false" collapse="true"}

## Lösung

* Rot: matrix[1,3]
* Grün: matrix[4:5,2:5]
* Pink: matrix[:,7]
* Orange: matrix[7,:4]
* Blau: matrix[-1,-1]

:::

:::