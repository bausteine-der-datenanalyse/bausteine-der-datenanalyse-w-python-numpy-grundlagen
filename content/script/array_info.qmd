# Größe und Struktur

```{python}
#| echo: false
import numpy as np
```

Wenn man sich nicht mehr sicher ist, welche Struktur oder Form ein Array hat oder 
oder diese Größen zum Beispiel für Schleifen nutzen möchte, bietet NumPy 
folgende Funktionen für das Auslesen dieser Größen an.

```{python}
matrix = np.array([[1, 2, 3], [4, 5, 6]])
```

`np.shape()` gibt die Längen der einzelnen Dimension in Form einer Liste zurück. 
```{python}
np.shape(matrix)
```

Die native Python Funktion `len()` gibt dagegen nur die Länge der ersten 
Dimension, also die Anzahl der Elemente in den äußeren Klammern wieder. 
```{python}
len(matrix)
```

Die Funktion `np.ndym()`gibt im Gegensatz zu `np.shape()` nur die Anzahl der 
Dimensionen zurück. 

```{python}
np.ndim(matrix)
```

::: {.callout-tip collapse="true"}
## Die Ausgabe von `np.ndim()` kann mit `np.size()`und einer nativen Python Funktion erreicht werden. Wie?

`np.ndim()` gibt die Länge der Liste von `np.shape()` aus
```{python}
len(np.shape(matrix))
```
:::

Möchte man die Anzahl aller Elemente in einem Array ausgeben kann man die 
Funktion `np.size()` benutzen.

```{python}
np.size(matrix)
```

