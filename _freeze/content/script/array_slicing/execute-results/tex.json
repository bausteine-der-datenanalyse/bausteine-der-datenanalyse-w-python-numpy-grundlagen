{
  "hash": "f3712efc720fe7ee5eec7dca11232442",
  "result": {
    "engine": "jupyter",
    "markdown": "# Slicing\n\n\n\n![Ansprechen der einzelnen Achsen für den ein-, zwei- und dreidimensionallen Fall inkl. jeweiligem Beispiel](/content/script/fig/slicing.svg){#fig-slicing fig-alt=\"AUswahl der jeweiligen Achsen für NumPy Arrays von verschiedener Dimension, dargestellt durch gestapelte Blöcke\"}\n\nMöchte man jetzt Daten innerhalb eines Arrays auswählen so geschieht das in der \nForm:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nliste = np.array([1, 2, 3, 4, 5, 6])\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Auswählen des ersten Elements\nliste[0]\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n1\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Auswählen des letzen Elements\nliste[-1]\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n6\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Auswählen einer Reihe von Elementen\nliste[1:4]\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\narray([2, 3, 4])\n```\n:::\n:::\n\n\nFür zwei-dimensionale Arrays wählt man getrennt durch ein Komma mit einer \nzweiten Zahl die zweite Dimension aus.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nmatrix = np.array([[1, 2, 3], [4, 5, 6]])\n```\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# Auswählen einer Elements\nmatrix[1,1]\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n5\n```\n:::\n:::\n\n\nFür drei-dimensionale Arrays wählt man getrennt durch ein Komma mit einer \nweiteren Zahl die dritte Dimension aus. Dabei wird dieses jedoch an die erste \nStelle gesetzt. \n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nmatrix_3d = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\nprint(matrix_3d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[[ 1  2  3]\n  [ 4  5  6]]\n\n [[ 7  8  9]\n  [10 11 12]]]\n```\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# Auswählen eines Elements\nmatrix_3d[1,0,2]\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n9\n```\n:::\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n\n## Zwischenübung: Array-Slicing\n\nWählen Sie die farblich markierten Bereiche aus dem Array \"matrix\" mit den eben \ngelernten Möglichkeiten des Array-Slicing aus.\n\n![](/content/script/fig/exercise_slicing.svg)\n\n::: {.callout-caution icon=\"false\" collapse=\"true\"}\n\n## Lösung\n\n* Rot: matrix[1,3]\n* Grün: matrix[4:5,2:5]\n* Pink: matrix[:,7]\n* Orange: matrix[7,:4]\n* Blau: matrix[-1,-1]\n\n:::\n\n:::\n\n",
    "supporting": [
      "array_slicing_files/figure-pdf"
    ],
    "filters": []
  }
}